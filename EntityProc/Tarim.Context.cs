//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntityProc
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class TarimEntities : DbContext
    {
        public TarimEntities()
            : base("name=TarimEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Planlama> Planlamas { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<Uretim> Uretims { get; set; }
    
        public virtual int PlanEkle(Nullable<int> uNo, string pAdi, string bagliOlduguKurum)
        {
            var uNoParameter = uNo.HasValue ?
                new ObjectParameter("UNo", uNo) :
                new ObjectParameter("UNo", typeof(int));
    
            var pAdiParameter = pAdi != null ?
                new ObjectParameter("PAdi", pAdi) :
                new ObjectParameter("PAdi", typeof(string));
    
            var bagliOlduguKurumParameter = bagliOlduguKurum != null ?
                new ObjectParameter("BagliOlduguKurum", bagliOlduguKurum) :
                new ObjectParameter("BagliOlduguKurum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlanEkle", uNoParameter, pAdiParameter, bagliOlduguKurumParameter);
        }
    
        public virtual ObjectResult<PlanlamaAra_Result> PlanlamaAra(Nullable<int> pNo, string pAdi)
        {
            var pNoParameter = pNo.HasValue ?
                new ObjectParameter("PNo", pNo) :
                new ObjectParameter("PNo", typeof(int));
    
            var pAdiParameter = pAdi != null ?
                new ObjectParameter("PAdi", pAdi) :
                new ObjectParameter("PAdi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanlamaAra_Result>("PlanlamaAra", pNoParameter, pAdiParameter);
        }
    
        public virtual int PlanlamaGuncelle(Nullable<int> pNo, Nullable<int> uNo, string pAdi, string bagliOlduguKurum)
        {
            var pNoParameter = pNo.HasValue ?
                new ObjectParameter("PNo", pNo) :
                new ObjectParameter("PNo", typeof(int));
    
            var uNoParameter = uNo.HasValue ?
                new ObjectParameter("UNo", uNo) :
                new ObjectParameter("UNo", typeof(int));
    
            var pAdiParameter = pAdi != null ?
                new ObjectParameter("PAdi", pAdi) :
                new ObjectParameter("PAdi", typeof(string));
    
            var bagliOlduguKurumParameter = bagliOlduguKurum != null ?
                new ObjectParameter("BagliOlduguKurum", bagliOlduguKurum) :
                new ObjectParameter("BagliOlduguKurum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlanlamaGuncelle", pNoParameter, uNoParameter, pAdiParameter, bagliOlduguKurumParameter);
        }
    
        public virtual int PlanlamaSil(Nullable<int> pNo)
        {
            var pNoParameter = pNo.HasValue ?
                new ObjectParameter("PNo", pNo) :
                new ObjectParameter("PNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PlanlamaSil", pNoParameter);
        }
    
        public virtual ObjectResult<PlanListele_Result> PlanListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PlanListele_Result>("PlanListele");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<UretimAra_Result> UretimAra(Nullable<int> uNo, string uAdi)
        {
            var uNoParameter = uNo.HasValue ?
                new ObjectParameter("UNo", uNo) :
                new ObjectParameter("UNo", typeof(int));
    
            var uAdiParameter = uAdi != null ?
                new ObjectParameter("UAdi", uAdi) :
                new ObjectParameter("UAdi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UretimAra_Result>("UretimAra", uNoParameter, uAdiParameter);
        }
    
        public virtual int UretimEkleme(string uAdi, string uSehir, Nullable<int> uMiktar)
        {
            var uAdiParameter = uAdi != null ?
                new ObjectParameter("UAdi", uAdi) :
                new ObjectParameter("UAdi", typeof(string));
    
            var uSehirParameter = uSehir != null ?
                new ObjectParameter("USehir", uSehir) :
                new ObjectParameter("USehir", typeof(string));
    
            var uMiktarParameter = uMiktar.HasValue ?
                new ObjectParameter("UMiktar", uMiktar) :
                new ObjectParameter("UMiktar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UretimEkleme", uAdiParameter, uSehirParameter, uMiktarParameter);
        }
    
        public virtual int UretimGuncelle(Nullable<int> uNo, string uAdi, string uSehir, Nullable<int> uMiktar)
        {
            var uNoParameter = uNo.HasValue ?
                new ObjectParameter("UNo", uNo) :
                new ObjectParameter("UNo", typeof(int));
    
            var uAdiParameter = uAdi != null ?
                new ObjectParameter("UAdi", uAdi) :
                new ObjectParameter("UAdi", typeof(string));
    
            var uSehirParameter = uSehir != null ?
                new ObjectParameter("USehir", uSehir) :
                new ObjectParameter("USehir", typeof(string));
    
            var uMiktarParameter = uMiktar.HasValue ?
                new ObjectParameter("UMiktar", uMiktar) :
                new ObjectParameter("UMiktar", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UretimGuncelle", uNoParameter, uAdiParameter, uSehirParameter, uMiktarParameter);
        }
    
        public virtual ObjectResult<UretimListele_Result> UretimListele()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UretimListele_Result>("UretimListele");
        }
    
        public virtual int UretimSil(Nullable<int> uNo)
        {
            var uNoParameter = uNo.HasValue ?
                new ObjectParameter("UNo", uNo) :
                new ObjectParameter("UNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UretimSil", uNoParameter);
        }
    }
}
